#include "headers/sfall/sfall.h"
#include "headers/sfall/define_lite.h"
#include "headers/fallout-2-adjustments.h"

variable
  equippedArmor,
  currentSneakPenalty,
  debuggingEnabled;

procedure applySneakPenalty(variable armor);
procedure removeSneakPenalty;
procedure gameModeChangeHandler;
procedure inventoryMoveHandler;

procedure start begin
  if game_loaded then begin
    variable armorPenaltyEnabled = get_ini_setting(
      INI_PATH "|armorPenalty|armorPenalty");

    if armorPenaltyEnabled == 1 then begin
      debuggingEnabled = get_ini_setting(
        INI_PATH "|debugging|armorPenalty");

      equippedArmor = critter_inven_obj(dude_obj, INVEN_TYPE_WORN);

      // Armor penalty of armor worn on game load.
      call applySneakPenalty(equippedArmor);

      register_hook_proc(HOOK_INVENTORYMOVE, inventoryMoveHandler);
      register_hook_proc(HOOK_GAMEMODECHANGE, gameModeChangeHandler);
    end
  end
end

procedure inventoryMoveHandler begin
  variable
    targetSlot = get_sfall_arg_at(0),
    movedItem = get_sfall_arg_at(1);
    // replacedItem = get_sfall_arg_at(2);

  if obj_item_subtype(movedItem) == item_type_armor then begin
    // Equipping armor.
    if targetSlot == 3 then
      if using_skill(dude_obj, SKILL_SNEAK) then begin
        display_msg("Cannot equip armor while sneaking.");

        set_sfall_return(0);
      end
      else begin
        call removeSneakPenalty;

        equippedArmor = movedItem;

        call applySneakPenalty(equippedArmor);

        return;
      end

    // Removing armor.
    if movedItem == equippedArmor then
      call removeSneakPenalty;
  end
end

procedure applySneakPenalty(variable armor) begin
  variable
    armorWeight = proto_data(obj_pid(armor),it_weight),
    unpenalizedSneak = has_skill(dude_obj, SKILL_SNEAK),
    newSneakPenalty =
      floor(0.025 * (armorWeight - 10) * unpenalizedSneak);

  if newSneakPenalty > 0 then
    critter_mod_skill(dude_obj, SKILL_SNEAK, -newSneakPenalty);
  else newSneakPenalty = 0;

  currentSneakPenalty = newSneakPenalty;

  if debuggingEnabled == 1 then begin
    display_msg("Applied sneak penalty.");
    display_msg("armor: " + armor);
    display_msg("armorName: " + obj_name(armor));
    display_msg("armorWeight: " + armorWeight);
    display_msg("unpenalizedSneak: " + unpenalizedSneak);
    display_msg("currentSneakPenalty: " + currentSneakPenalty);
    display_msg("currentSneak: " + has_skill(dude_obj, SKILL_SNEAK));
  end
end

procedure removeSneakPenalty begin
  critter_mod_skill(dude_obj, SKILL_SNEAK, currentSneakPenalty);

  currentSneakPenalty = 0;

  if debuggingEnabled == 1 then begin
    display_msg("Removed sneak penalty.");
    display_msg("currentSneak: " + has_skill(dude_obj, SKILL_SNEAK));
  end
end

procedure gameModeChangeHandler begin
  variable
    previousGameMode = get_sfall_arg_at(1),
    currentGameMode = get_game_mode;

  // Opening the character screen.
  if not(previousGameMode bwand CHARSCREEN) andAlso
      currentGameMode bwand CHARSCREEN then begin
    // If in sneak mode, inform about the penalty.
    if using_skill(dude_obj, SKILL_SNEAK) then
      display_msg("Sneak penalty from armor: " +
        currentSneakPenalty + " point(s).");

    call removeSneakPenalty;
  end

  // Closing the character screen.
  // Recalculate the penalty, in case the player have put points in sneak.
  if previousGameMode bwand CHARSCREEN andAlso
      not(currentGameMode bwand CHARSCREEN) then
    call applySneakPenalty(equippedArmor);
end
