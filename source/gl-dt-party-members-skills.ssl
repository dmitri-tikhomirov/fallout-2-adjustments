#include "headers/sfall/sfall.h"
#include "headers/sfall/define_lite.h"

#include "headers/fallout-2-adjustments.h"

variable
  preventPartyMembersBarter,
  preventPartyMembersOutdoorsman,
  debuggingEnabled;

variable
  partyMemberList,
  partyMemberAdditionalSkillPoints;

procedure gameModeChangeHandler;

procedure start begin
  if game_loaded then begin
    preventPartyMembersBarter = get_ini_setting(
      INI_PATH "|partyMembersSkills|preventPartyMembersBarter");
    preventPartyMembersOutdoorsman = get_ini_setting(
      INI_PATH "|partyMembersSkills|preventPartyMembersOutdoorsman");

    if preventPartyMembersBarter == 1 orElse
        preventPartyMembersOutdoorsman == 1 then begin
      debuggingEnabled = get_ini_setting(
        INI_PATH "|debugging|partyMembersSkills");

      register_hook_proc(HOOK_GAMEMODECHANGE, gameModeChangeHandler);
    end
  end
end

procedure gameModeChangeHandler begin
  variable
    previousGameMode = get_sfall_arg_at(1),
    currentGameMode = get_game_mode,
    partyMember;

  if preventPartyMembersBarter then begin
    // Entering barter.
    if not(previousGameMode bwand BARTER) andAlso
        currentGameMode bwand BARTER then begin
      partyMemberList = party_member_list(0);
      fix_array(partyMemberList);

      partyMemberAdditionalSkillPoints = {};
      fix_array(partyMemberAdditionalSkillPoints);

      foreach partyMember in partyMemberList begin
        if partyMember != dude_obj then begin
          partyMemberAdditionalSkillPoints[partyMember] =
            get_critter_skill_points(partyMember, SKILL_BARTER);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", barter skill: " +
              has_skill(partyMember, SKILL_BARTER));
            display_msg("Additional skill points: " +
              get_critter_skill_points(partyMember, SKILL_BARTER));
          end

          set_critter_skill_points(partyMember, SKILL_BARTER, -200);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", barter skill: " +
              has_skill(partyMember, SKILL_BARTER));
          end
        end
      end
    end

    // Exiting barter.
    if previousGameMode bwand BARTER andAlso
        not(currentGameMode bwand BARTER) then begin
      foreach partyMember in partyMemberList begin
        if partyMember != dude_obj then begin
          set_critter_skill_points(partyMember, SKILL_BARTER,
            partyMemberAdditionalSkillPoints[partyMember]);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", barter skill: " +
              has_skill(partyMember, SKILL_BARTER));
          end
        end
      end
    end
  end

  if preventPartyMembersOutdoorsman then begin
    // Entering world map.
    if not(previousGameMode bwand WORLDMAP) andAlso
        currentGameMode bwand WORLDMAP then begin
      partyMemberList = party_member_list(0);
      fix_array(partyMemberList);

      partyMemberAdditionalSkillPoints = {};
      fix_array(partyMemberAdditionalSkillPoints);

      foreach partyMember in partyMemberList begin
        if partyMember != dude_obj then begin
          partyMemberAdditionalSkillPoints[partyMember] =
            get_critter_skill_points(partyMember, SKILL_OUTDOORSMAN);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", outdoorsman skill: " +
              has_skill(partyMember, SKILL_OUTDOORSMAN));
            display_msg("Additional skill points: " +
              get_critter_skill_points(partyMember, SKILL_OUTDOORSMAN));
          end

          set_critter_skill_points(partyMember, SKILL_OUTDOORSMAN, -200);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", outdoorsman skill: " +
              has_skill(partyMember, SKILL_OUTDOORSMAN));
          end
        end
      end
    end

    // Exiting world map.
    if previousGameMode bwand WORLDMAP andAlso
        not(currentGameMode bwand WORLDMAP) then begin
      foreach partyMember in partyMemberList begin
        if partyMember != dude_obj then begin
          set_critter_skill_points(partyMember, SKILL_OUTDOORSMAN,
            partyMemberAdditionalSkillPoints[partyMember]);
          if debuggingEnabled == 1 then begin
            display_msg(obj_name(partyMember) + ", outdoorsman skill: " +
              has_skill(partyMember, SKILL_OUTDOORSMAN));
          end
        end
      end
    end
  end
end
